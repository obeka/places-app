{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","Card","style","ErrorModal","onCancel","onClear","header","show","error","footer","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalOverlay","content","headerClass","onSubmit","e","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","Map","mapRef","mapboxgl","accessToken","center","zoom","map","container","Marker","setLngLat","addTo","ref","PlaceItem","auth","useContext","AuthContext","showMap","setShowMap","showComfirmModal","setShowComfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","process","id","Authorization","token","onDelete","address","coordinates","lng","lat","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","PlaceList","items","length","place","key","creator","location","onDeletePlace","UserPlaces","useParams","loadedPlaces","setLoadedPlaces","places","fetchPlaces","deletedPlaceId","prevPlaces"],"mappings":"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","file":"static/js/5.33b536f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController(); //to be able to cancel the request if there is an error on the way\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : (e) => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\n\r\nimport \"./Map.css\";\r\n\r\nfunction Map(props) {\r\n  const mapRef = useRef(); \r\n  mapboxgl.accessToken =\r\n    \"pk.eyJ1Ijoib21lcmJrazA2IiwiYSI6ImNrNThqeGRxbDBlcDIzam11eDIzaDRsamYifQ.P8GSW1O3dRj59x7v9l7FqA\";\r\n\r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    const map = new mapboxgl.Map({\r\n      container: mapRef.current,\r\n      style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\r\n      center, // starting position [lng, lat]\r\n      zoom:12, // starting zoom\r\n    });\r\n    var marker = new mapboxgl.Marker().setLngLat(center).addTo(map);\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./PlaceItem.css\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nfunction PlaceItem(props) {\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showComfirmModal, setShowComfirmModal] = useState(false);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n  const closeMapHandler = () => setShowMap(false);\r\n  const showDeleteWarningHandler = () => setShowComfirmModal(true);\r\n  const cancelDeleteHandler = () => setShowComfirmModal(false);\r\n  const confirmDeleteHandler = async () => {\r\n    setShowComfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map\r\n            center={[props.coordinates.lng, props.coordinates.lat]}\r\n            zoom={16}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showComfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/` + props.image}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport \"./PlaceList.css\";\r\n\r\nfunction PlaceList(props) {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No Places found. Maybe create one.</h2>\r\n          <Button to='/places/new '>Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default PlaceList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PlaceList from \"../components/PlaceList\";\r\n\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nfunction UserPlaces() {\r\n  const userId = useParams().userId;\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlaces, setLoadedPlaces] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeleteHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces.length > 0 && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeleteHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}