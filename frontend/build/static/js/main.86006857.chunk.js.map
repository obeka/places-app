{"version":3,"sources":["shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/utils/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/context/auth-context.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","shared/hooks/auth-hook.js","App.js","index.js"],"names":["Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","process","name","placesCount","UsersList","items","length","map","user","key","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","e","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","User","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouch","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formIsValidity","AuthContext","createContext","isLoggedIn","userId","token","login","logout","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","display","accept","ref","pickedFile","fileIsValid","files","center","click","NewPlace","auth","useContext","history","useHistory","title","description","address","inputHandler","placeSubmitHandler","formData","FormData","append","Authorization","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Map","mapRef","mapboxgl","accessToken","zoom","container","Marker","setLngLat","addTo","PlaceItem","showMap","setShowMap","showComfirmModal","setShowComfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","coordinates","lng","lat","creatorId","PlaceList","place","creator","location","onDeletePlace","UserPlaces","useParams","loadedPlaces","setLoadedPlaces","fetchPlaces","deletedPlaceId","prevPlaces","UpdatePlace","placeId","editedPlace","setEditedPlace","setFormData","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","Auth","logoutTimer","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","undefined","prevMode","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","render","StrictMode"],"mappings":"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","file":"static/js/main.86006857.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = props => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;  ","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./UserItem.css\";\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\n\r\nfunction UserItem(props) {\r\n  return (\r\n    <li className=\"user-item\">\r\n        <Card className=\"user-item__content\">\r\n          <Link to={`/${props.id}/places`}>\r\n            <div className=\"user-item__image\">\r\n              <Avatar image={`${process.env.REACT_APP_ASSET_URL}/` + props.image} alt={props.name} />\r\n            </div>\r\n            <div className=\"user-item__info\">\r\n              <h2>{props.name}</h2>\r\n              <h3>\r\n                {props.placesCount}{\" \"}\r\n                {props.placesCount === 1 ? \"Place\" : \"Places\"}\r\n              </h3>\r\n            </div>\r\n          </Link>\r\n        </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\n\r\nimport UserItem from \"./UserItem\";\r\nimport \"./UsersList.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\n\r\nfunction UsersList(props) {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map((user) => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placesCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default UsersList;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : (e) => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController(); //to be able to cancel the request if there is an error on the way\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nfunction User() {\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users`\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../utils/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouch: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction Input(props) {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isValid: props.initialValid || false,\r\n    isTouch: false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n  const changeHandler = (e) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: e.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouch && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouch && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formIsValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formIsValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token:null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n\r\n\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nfunction ImageUpload(props) {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  const pickedHandler = (e) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (e.target.files && e.target.files.length === 1) {\r\n      pickedFile = e.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        type=\"file\"\r\n        id={props.id}\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.png,.jpeg\"\r\n        ref={filePickerRef}\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/utils/validators\";\r\nimport \"./PlaceForm.css\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nfunction NewPlace() {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const history = useHistory();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const placeSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"creator\", auth.userId);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n\r\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places`, \"POST\", formData, {\r\n        Authorization: 'Bearer ' + auth.token\r\n      });\r\n      //Redirect user to different page\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          element=\"input\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title\"\r\n          onInput={inputHandler}\r\n        />\r\n\r\n        <Input\r\n          id=\"description\"\r\n          type=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          type=\"input\"\r\n          label=\"Address\"\r\n          element=\"input\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          center\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NewPlace;\r\n","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport \"./NavLinks.css\";\r\n\r\nfunction NavLinks(props) {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && <li>\r\n        <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default NavLinks;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n};\r\n\r\nexport default SideDrawer;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\nimport \"./MainNavigation.css\";\r\n\r\nconst MainNavigation = (props) => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n      <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">YourPlaces</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\n\r\nimport \"./Map.css\";\r\n\r\nfunction Map(props) {\r\n  const mapRef = useRef(); \r\n  mapboxgl.accessToken =\r\n    \"pk.eyJ1Ijoib21lcmJrazA2IiwiYSI6ImNrNThqeGRxbDBlcDIzam11eDIzaDRsamYifQ.P8GSW1O3dRj59x7v9l7FqA\";\r\n\r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    const map = new mapboxgl.Map({\r\n      container: mapRef.current,\r\n      style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\r\n      center, // starting position [lng, lat]\r\n      zoom:12, // starting zoom\r\n    });\r\n    var marker = new mapboxgl.Marker().setLngLat(center).addTo(map);\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./PlaceItem.css\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nfunction PlaceItem(props) {\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showComfirmModal, setShowComfirmModal] = useState(false);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n  const closeMapHandler = () => setShowMap(false);\r\n  const showDeleteWarningHandler = () => setShowComfirmModal(true);\r\n  const cancelDeleteHandler = () => setShowComfirmModal(false);\r\n  const confirmDeleteHandler = async () => {\r\n    setShowComfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map\r\n            center={[props.coordinates.lng, props.coordinates.lat]}\r\n            zoom={16}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showComfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/` + props.image}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport \"./PlaceList.css\";\r\n\r\nfunction PlaceList(props) {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No Places found. Maybe create one.</h2>\r\n          <Button to='/places/new '>Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default PlaceList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PlaceList from \"../components/PlaceList\";\r\n\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nfunction UserPlaces() {\r\n  const userId = useParams().userId;\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlaces, setLoadedPlaces] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeleteHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces.length > 0 && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeleteHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UserPlaces;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { VALIDATOR_REQUIRE } from \"../../shared/utils/validators\";\r\nimport \"./PlaceForm.css\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nfunction UpdatePlace() {\r\n  const auth = useContext(AuthContext);\r\n  const placeId = useParams().placeId;\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [editedPlace, setEditedPlace] = useState();\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n        );\r\n        setEditedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (error) {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  const placeUpdateSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n          creator: auth.userId,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      //Redirect user to different page\r\n      history.push(`/${auth.userId}/places`);\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!editedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find the place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && editedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={editedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid description (min 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={editedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UpdatePlace;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport \"./Auth.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/utils/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nfunction Auth() {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const authSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value); // in the backend, fileUpload.single looks for the 'image' key\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          \"POST\",\r\n          formData\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: { value: \"\", isValid: false },\r\n          image: { value: null, isValid: false },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              label=\"Your Name\"\r\n              type=\"text\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please Enter a Name\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload id=\"image\" center onInput={inputHandler} errorText='Please provide an image.'/>\r\n          )}{\" \"}\r\n          {/* Same onInput function with other inputs */}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"email\"\r\n            label=\"E-mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [userId, setUserId] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate); //this is not the var above\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setTokenExpirationDate(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(storedData.uid, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport User from \"./user/pages/Users\";\nimport NewPlace from \"./places/pages/NewPlace\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport UserPlaces from \"./places/pages/UserPlaces\";\nimport UpdatePlace from \"./places/pages/UpdatePlace\";\nimport Auth from \"./user/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <User />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\">\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <User />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}